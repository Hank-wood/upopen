<% include ../../common/header.ejs %> <div class="main" id="blogBox"><section><div class="info clearfix"><span class="title">nodemailer</span> <a class="type" href="/blog/list?kind=nodejs">nodejs</a> <img class="head" src="/public/imgs/head.png" width="42"></div><div class="tool"><!--span class="toolItem view">Views: 0</span>
			<span class="toolItem talk">Comments: 0</span--> <span class="toolItem date">Date: 2016-05-03</span></div><div class="content clearfix markdown"><p>后端服务常会用到邮件功能，如注册、修改密码等，nodejs的nodemailer第三方模块提供邮件的发送功能，我在upopen.cn中也有应用，用户注册成功后，server服务会发一封欢迎邮件到用户注册邮箱。</p><p>基于nodemailer的二次封装在 server/lib/mailer.js，使用是在 server/server/user.js register</p><p>使用如下:</p><pre><code class="lang-js">    var transporter = require( &#39;nodemailer&#39; );  //引用模块
    var transporter = nodemailer.createTransport({
        service: &#39;QQ&#39;,
        auth: {
            user: &#39;2270112418@qq.com&#39;,
            pass: &#39;bscaehznqgaidhhi&#39;
        }
    });
</code></pre><p>server: 邮件服务器，这里用的QQ邮箱，不同服务商的邮件服务器名是不同的，本来我找到一个列表的，忘记放哪里了，随后再附。注意要到邮箱设置里开启 POP3 / SMTP服务，否则会报535错误<br>auth.user: 邮件帐号<br>auth.pass: POP3开启后，其会给出一组授权码，添写在此处 。注意不要写自己的邮箱登录密码</p><pre><code class="lang-js">    function mail( config ){

        var mailOptions = {
            from: &#39;2270112418@qq.com&#39;,      
                    //发件人帐号，要与上面的auth.user一致，否则会报501错误
            to: config.to || &#39;5858186@qq.com&#39;,     
                    //收件人帐号
            subject: config.subject || &#39;&lt;h3&gt;hi, register success&lt;/h3&gt;&#39;, 
                    //邮件标题
            text: config.subject || &#39;&lt;h3&gt;hi, register success&lt;/h3&gt;&#39;, 
                    //邮件内容
            html: config.html || &#39;&lt;h3&gt;hi, register success&lt;/h3&gt;&#39;, 
                    //以html形式编写邮件内容
            attachments: config.annex || [] 
                    //附件，值是数组
        };

        transporter.sendMail(mailOptions, function(error, info){
            if(error){
                console.log(error);
            }else{
                console.log(&#39;Message sent: &#39; + info.response);
            }
        });

    }

    module.exports = mail;
</code></pre><p>封装发送邮件的函数</p><p>使用如</p><pre><code class="lang-js">    mail({
        to: redisData.username,
        subject: &#39;hi, welcome to upopen.cn&#39;,
        html: &#39;Congratulations, you have successfully registered as a member of upopen.cn,We won\&#39;t bother you unless you have to&#39;
    });
</code></pre></div></section><div class="comments" name="comments" id="comments"><div class="commentWrap" id="commentWrap"></div><form class="commentForm" id="commentForm"><input type="text" placeholder="you name" id="commentUser" maxlength="30" class="commentUser"><br><textarea class="commentContent" id="commentContent" rows="6" maxlength="1000" placeholder="your comment for this blog within 1000 words"></textarea><br><button type="submit" id="commentBtn" class="btn">SAVE COMMENT</button><br><br></form></div></div> <% include ../../common/slide.ejs %> <% include ../../common/footer.ejs %>