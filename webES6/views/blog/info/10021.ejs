<% include ../../common/header.ejs %>
<div class="main" id="blogBox">
	<section>	
		<div class="info clearfix">
			<span class="title">pm2 nodejs</span>
			<a class="type" href="/blog/list?kind=nodejs">nodejs</a>
			<img class="head" src="/public/imgs/head.png" width="42" />
		</div>
		<div class="tool">
			<!--span class="toolItem view">Views: 23</span>
			<span class="toolItem talk">Comments: 0</span-->
			<span class="toolItem date">Date: 2016-01-14</span>
		</div>
		<div class="content clearfix markdown"><p>P(rocess)M(anager)2 是一个带有负载均衡的Node应用的进程管理器，其优势在于可利用服务器上的所有CPU，并保证进程永远都在线，0秒重载。其适合laaS（基础架构即服务）结构，不适于Pass方案(平台即服务)。其本身作为主进程，然后将项目封装到一个特殊的集群进程里，并对子进程做监控。upopen.cn里的nodejs项目运行全部依赖于pm2。开发阶段也可以用pm2-dev，实时查看log，不过我还是习惯用node-dev。</p>

<p>简单来讲，优势有：</p>

<p>1、监听nodejs项目服务线程，保证其不会掉线</p>

<blockquote><p>其原理是pm2本身是一个主进程，nodejs项目是子进程，主进程监听子进程，当子进程意外停止时，主进程会去重启子进程，这在我们上线项目时是必要的，虽然我们可以用try..catch，domain，process等来捕捉意外逻辑错误，但其并不能解决全部问题，崩溃一个项目还有可能是内存溢出及各种软、硬件等问题。当然其并没有解决系统本身存在的漏洞，要做好日志监听、跟踪工作，以便崩溃时查找。</p></blockquote>

<p>2、提供负载均衡，充分利用服务器高性能</p>

<blockquote><p>12年刚接触nodejs时，一个同事问我，nodejs是单线程的，那如何充分利用CPU呢，那个时候too young，说多复制几份，以不端口分别启动，通过nginx去负载。首先通过nginx是可以达到的，但nodejs的模块本身已经更好的提供了这个功能，即一次启动时，可以指定启动多少个进程来运行nodejs项目，单台服务上同一项目的多个nodejs进程负载，由pm2本身就可以完成，并且其还提供了很好的监按功能</p></blockquote>

<p>同类框架forever，不过后者功能少于pm2。</p>

<p>特性： <br/>1、内建负载均衡（使用Node cluster集群模块） <br/>2、后台运行 <br/>3、升级无需停机 <br/>4、具有Ubuntu启动脚本 <br/>5、停止不稳定的进程 <br/>6、控制台检测 <br/>7、提供Http API <br/>8、远程控制和实时的接口API（允许和PM2进程管理器交互）   </p>

<p>安装：</p>

<pre><code>npm install -g pm2     //几乎都是全局使用

pm2 update          //更新pm2</code></pre>

<p>API：[标星部分，是据使用经验，较多使用]</p>

<pre><code> pm2 start app.js -i 4     //*运行pm2，启动4个app.js，当设置个数超过cpu核数时，超出部分是没有意义的。
 pm2 start app.js -i max //运行pm2，自动据CPU核心数尽量启动多的app.js
 pm2 start app.js --name myNodejs     //*运行pm2，设置进程名，当多个项目启动时，需据进程名stop / restart...，upopen的服务器，同时启动了五个不同的nodejs项目，此时就需要据name来做不同的管理
 pm2 start app.js --watch //启用监控，当文件被修改时，restart
 pm2 start app.json     //启动进程，在app.json里设置选项
 pm2 ls     //*显示所有进程状态，效果如下图</code></pre>

<p><img alt="pm2 ls" src="http://dl2.iteye.com/upload/attachment/0114/5353/f6ba6be1-b7d4-318e-b933-58ac86005756.jpg"/></p>

<pre><code> pm2 monit     //*监视所有进程，效果如下图</code></pre>

<p><img alt="pm2 monit" src="http://dl2.iteye.com/upload/attachment/0114/5355/740a4868-c42f-33a7-a77c-1031c0f49675.jpg"/></p>

<pre><code> pm2 logs  [&lt;all|id|name&gt;]//*显示所有进程日志，pm2启动无法显示nodejs中的console.log，可以通过 pm2 logs查看
 pm2 stop &lt;all|id|name&gt; //*停止指定进程
 pm2 reload &lt;all|id|name&gt;    //*重载指定进程
 pm2 restart &lt;all|id|name&gt;    //*重启指定进程
 pm2 delete &lt;all|id|name&gt;     //*杀死指定进程
 pm2 kill     //*杀死所有进程
 pm2-dev run app.js  //开发模式，同node-dev</code></pre></div>
	</section>
	<div class="comments">
		<div class="commentWrap" id="commentWrap">
			
		</div>
		<form class="commentForm" id="commentForm">
			<input type="text" placeHolder="you name" id="commentUser" maxLength="30" class="commentUser" /><br />
			<textarea class="commentContent" id="commentContent" rows="6" maxLength="1000" placeHolder="your comment for this blog within 1000 words"></textarea><br />
			<button type="submit" id="commentBtn" class="btn">SAVE COMMENT</button><br /><br />
		</form>
	</div>
</div>

<% include ../../common/slide.ejs %>
<% include ../../common/footer.ejs %>
