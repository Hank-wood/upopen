<!DOCTYPE html>
<html>
<head>
<title>UPOPEN</title>
<meta charset="UTF-8" />
<link href="./assets/core/css/reset.css" type="text/css" rel="stylesheet">
<link href="./assets/public/css/common.css" type="text/css" rel="stylesheet">
</head>
<body>
<div class="bg"></div>
<header>
	<div class="header">
		<div class="logo">
			<span class="logo_icon"></span>
			<span class="logo_iconbg"></span>			
			<font class="logo_font">UPOPEN</font>
		</div>
		<dl class="navigator">
			<dd><a href="">BLOG</a></dd>
			<dd><a href="">CASE</a></dd>
			<dd><a href=""></a></dd>
			<dd><a href=""></a></dd>
			<dd><a href="">Sign In</a></dd>
		</dl>
	</div>
</header>
<div class="container clearfix">
	<div class="blog">
		<section>
			<div class="info clearfix">
				<h4><a>Nodejs API-Events 谈观察者模式</a></h4><a class="type">nodejs</a>
				<img class="head" src="/assets/public/imgs/head.png" width="42" />
				
			</div>
			<p class="content clearfix">
			一、前言<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nodejs使用有些日子了，近来再回顾下其API、多使用新特性，以期有更高层次的掌握，本次API的总结区别于单纯对英文版的汉化，会多做些扩展和自己的理解，希望对大家有所帮助，先从最核心的Events开始<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nodejs的Events实现了一种观察者模式，其支持了Nodejs的核心机制，且http / fs / mongoose等都继承了Events，可以添加监听事件。这种设计模式在客户端的组件编程思想里经常会用到，我们先简单了解下该模式。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首次接触 观察者模式是在Extjs框架的 Ext.util.observable源码，那时刚接触js，感觉这种模式很强大，也是我最早接触到的设计模式，后来在 underscore.js 源码里也有看到，且后者实现更简捷、优雅，我编写组件时也基本是按照这种思想。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;......<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a style="text-decoration:underline;color:#00B19E">&lt;view all&gt;</a>
			</p>
			<div class="tool">
				<span class="view">Views: 200</span>
				<span class="talk">Comments: 200</span>
				<span class="date">Date: 11-23 / 15</span>
			</div>
		</section>
		<section>
			<div class="info clearfix">
				<h4><a>Nodejs API-Events 谈观察者模式</a></h4><a class="type">nodejs</a>
				<img class="head" src="/assets/public/imgs/head.png" width="42" />
				
			</div>
			<p class="content clearfix">
			一、前言<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nodejs使用有些日子了，近来再回顾下其API、多使用新特性，以期有更高层次的掌握，本次API的总结区别于单纯对英文版的汉化，会多做些扩展和自己的理解，希望对大家有所帮助，先从最核心的Events开始<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nodejs的Events实现了一种观察者模式，其支持了Nodejs的核心机制，且http / fs / mongoose等都继承了Events，可以添加监听事件。这种设计模式在客户端的组件编程思想里经常会用到，我们先简单了解下该模式。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首次接触 观察者模式是在Extjs框架的 Ext.util.observable源码，那时刚接触js，感觉这种模式很强大，也是我最早接触到的设计模式，后来在 underscore.js 源码里也有看到，且后者实现更简捷、优雅，我编写组件时也基本是按照这种思想。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;......<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a style="text-decoration:underline;color:#00B19E">&lt;view all&gt;</a>
			</p>
			<div class="tool">
				<span class="view">Views: 200</span>
				<span class="talk">Comments: 200</span>
				<span class="date">Date: 11-23 15</span>
			</div>
		</section>
		<section>
			<div class="info clearfix">
				<h4><a>Nodejs API-Events 谈观察者模式</a></h4><a class="type">nodejs</a>
				<img class="head" src="/assets/public/imgs/head.png" width="42" />
				
			</div>
			<p class="content clearfix">
			一、前言<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nodejs使用有些日子了，近来再回顾下其API、多使用新特性，以期有更高层次的掌握，本次API的总结区别于单纯对英文版的汉化，会多做些扩展和自己的理解，希望对大家有所帮助，先从最核心的Events开始<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nodejs的Events实现了一种观察者模式，其支持了Nodejs的核心机制，且http / fs / mongoose等都继承了Events，可以添加监听事件。这种设计模式在客户端的组件编程思想里经常会用到，我们先简单了解下该模式。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首次接触 观察者模式是在Extjs框架的 Ext.util.observable源码，那时刚接触js，感觉这种模式很强大，也是我最早接触到的设计模式，后来在 underscore.js 源码里也有看到，且后者实现更简捷、优雅，我编写组件时也基本是按照这种思想。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;......<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a style="text-decoration:underline;color:#00B19E">&lt;view all&gt;</a>
			</p>
			<div class="tool">
				<span class="view">Views: 200</span>
				<span class="talk">Comments: 200</span>
				<span class="date">Date: 11-23 15</span>
			</div>
		</section>
		<section>
			<div class="info clearfix">
				<h4><a>Nodejs API-Events 谈观察者模式</a></h4><a class="type">nodejs</a>
				<img class="head" src="/assets/public/imgs/head.png" width="42" />
				
			</div>
			<p class="content clearfix">
			一、前言<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nodejs使用有些日子了，近来再回顾下其API、多使用新特性，以期有更高层次的掌握，本次API的总结区别于单纯对英文版的汉化，会多做些扩展和自己的理解，希望对大家有所帮助，先从最核心的Events开始<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nodejs的Events实现了一种观察者模式，其支持了Nodejs的核心机制，且http / fs / mongoose等都继承了Events，可以添加监听事件。这种设计模式在客户端的组件编程思想里经常会用到，我们先简单了解下该模式。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首次接触 观察者模式是在Extjs框架的 Ext.util.observable源码，那时刚接触js，感觉这种模式很强大，也是我最早接触到的设计模式，后来在 underscore.js 源码里也有看到，且后者实现更简捷、优雅，我编写组件时也基本是按照这种思想。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;......<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a style="text-decoration:underline;color:#00B19E">&lt;view all&gt;</a>
			</p>
			<div class="tool">
				<span class="view">Views: 200</span>
				<span class="talk">Comments: 200</span>
				<span class="date">Date: 11-23 15</span>
			</div>
		</section>
		<section>
			<div class="info clearfix">
				<h4><a>Nodejs API-Events 谈观察者模式</a></h4><a class="type">nodejs</a>
				<img class="head" src="/assets/public/imgs/head.png" width="42" />
				
			</div>
			<p class="content clearfix">
			一、前言<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nodejs使用有些日子了，近来再回顾下其API、多使用新特性，以期有更高层次的掌握，本次API的总结区别于单纯对英文版的汉化，会多做些扩展和自己的理解，希望对大家有所帮助，先从最核心的Events开始<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nodejs的Events实现了一种观察者模式，其支持了Nodejs的核心机制，且http / fs / mongoose等都继承了Events，可以添加监听事件。这种设计模式在客户端的组件编程思想里经常会用到，我们先简单了解下该模式。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首次接触 观察者模式是在Extjs框架的 Ext.util.observable源码，那时刚接触js，感觉这种模式很强大，也是我最早接触到的设计模式，后来在 underscore.js 源码里也有看到，且后者实现更简捷、优雅，我编写组件时也基本是按照这种思想。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;......<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a style="text-decoration:underline;color:#00B19E">&lt;view all&gt;</a>
			</p>
			<div class="tool">
				<span class="view">Views: 200</span>
				<span class="talk">Comments: 200</span>
				<span class="date">Date: 11-23 / 15</span>
			</div>
		</section>
		<section>
			<div class="info clearfix">
				<h4><a>Nodejs API-Events 谈观察者模式</a></h4><a class="type">nodejs</a>
				<img class="head" src="/assets/public/imgs/head.png" width="42" />
				
			</div>
			<p class="content clearfix">
			一、前言<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nodejs使用有些日子了，近来再回顾下其API、多使用新特性，以期有更高层次的掌握，本次API的总结区别于单纯对英文版的汉化，会多做些扩展和自己的理解，希望对大家有所帮助，先从最核心的Events开始<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Nodejs的Events实现了一种观察者模式，其支持了Nodejs的核心机制，且http / fs / mongoose等都继承了Events，可以添加监听事件。这种设计模式在客户端的组件编程思想里经常会用到，我们先简单了解下该模式。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;首次接触 观察者模式是在Extjs框架的 Ext.util.observable源码，那时刚接触js，感觉这种模式很强大，也是我最早接触到的设计模式，后来在 underscore.js 源码里也有看到，且后者实现更简捷、优雅，我编写组件时也基本是按照这种思想。<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;......<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a style="text-decoration:underline;color:#00B19E">&lt;view all&gt;</a>
			</p>
			<div class="tool">
				<span class="view">Views: 200</span>
				<span class="talk">Comments: 200</span>
				<span class="date">Date: 11-23 15</span>
			</div>
		</section>
	</div>
	<div class="slide">
		<h2 class="caseTit">
			Case List<br />
			<span>&nbsp;Useful & Interesting</span>
		</h2>
		<div class="item">
			<a>.check server interface</a>
			<a>.3d tank</a>
			<a>.chese chinaese</a>
		</div>
		
	</div>
</div>
<footer>
	<div class="footer">
		<a href="">who am I</a><br />
		<span>QQ Group: 435485569</span>
	</div>
</footer>
</body>
</html>
